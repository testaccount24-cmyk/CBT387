TITLE -- DESCRIPTION OF THE TAPE FOR THE STONY BROOK PASCAL 360 SYSTEM
AUTHOR -- WILLIAM BARABASH
DATE -- 22 MAY 1977 (UPDATE 4)
ADDRESS -- DEPARTMENT OF COMPUTER SCIENCE
           S.U.N.Y. AT STONY BROOK
           STONY BROOK, NEW YORK 11794
TELEPHONE NUMBER -- (516) 246-7146


      THIS TAPE CONSISTS OF 25 FILES WRITTEN ON A NINE TRACK MAGNETIC TAPE.
YOU ARE NOW READING THE CONTENTS OF FILE 1, WHICH CONTAINS INSTRUCTIONS ON HOW
TO RETRIEVE THE CONTENTS OF FILES 2 THROUGH 25 (AND ALSO ON HOW TO RE-RETRIEVE
FILE 1 ITSELF).

      HEREWITH ARE DESCRIPTIONS OF THE CONTENTS OF THE 25 FILES ON THIS TAPE
AND COMMENTS AS TO HOW THEY MAY BE USED.


                           *****  FILE 1  *****
                          *****  COMMENTS  *****

      THIS FILE CONTAINS A SEQUENCE OF CARD IMAGES WHICH, WHEN PRINTED, WILL
PROVIDE A DESCRIPTION OF THIS TAPE AND INSTRUCTIONS FOR ITS USE.  THE ATTRIBUTES
OF THIS FILE (AND ALL SOURCE CODE FILES APPEARING ON IT) ARE:__
               DCB=(RECFM=FBS,LRECL=80,BLKSIZE=7200) .

      THE CONTENTS OF FILE 1 MAY BE RE-RETRIEVED BY A JOB SIMILAR TO THE
FOLLOWING:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBPTPCH
//SYSPRINT DD SYSOUT=A
//SYSUT1   DD DSN=COMMENTS,DISP=OLD,UNIT=TAPE9,VOL=SER=PASCAL
//SYSUT2   DD SYSOUT=A
//SYSIN    DD *
         PRINT TYPORG=PS,MAXFLDS=1
         TITLE ITEM=('DESCRIPTION OF PASCAL TAPE',50)
        RECORD FIELD=(80,,,20)
//


                           *****  FILE 2  *****
                        *****  OMONITOR.ASM  *****

      THIS FILE CONTAINS THE PASCAL OVERLAY MONITOR, A MUTATION OF XPLSM WHICH
SUPPORTS THE MULTIPASS ARCHITECTURE OF THE STONY BROOK PASCAL 360 COMPILER.  THE
MAJOR DIFFERENCES BETWEEN THIS PROGRAM AND XPLSM ARE THE NUMBER OF INPUT FILES
(UP TO 6), THE NUMBER OF OUTPUT FILES (UP TO 7) AND THE DDNAMES THE FILES ARE
MAPPED ONTO.  SPECIFICALLY,

            //PROGRAM  DD  ...

IS REPLACED BY

            //PASS1  DD  ...
            //PASS2  DD  ...
            //PASS3  DD  ...
                  AND
            //PMD    DD  ...

STATEMENTS.  THE SEQUENTIALLY-ACCESSED FILE DD'S

            //INPUT2  DD  ...
AND         //OUTPUT3  DD  ...

ARE REPLACED BY

            //SYSUT1  DD  ... .

      LIKEWISE, WE REPLACE  //INPUT3  AND  //OUTPUT4  BY  //SYSUT2,
//INPUT4  AND  //OUTPUT5  BY  //SYSUT3 , AND //INPUT5 AND //OUTPUT6 BY
//SYSUT4.

      INPUT(0) AND INPUT(1) REFER TO  //SYSIN  , OUTPUT(0) AND OUTPUT(1) REFER
TO  //SYSPRINT  AND OUTPUT(2) REFERS TO  //SYSPUNCH  AS UNDER XPLSM.

      THE SYSUT FILES ARE USED AS FOLLOWS:  DURING PASS 1, FILE SYSUT1 IS
GENERATED (VIA ASSIGNMENTS TO THE PSEUDOVARIABLE OUTPUT(3)) FOR TRANSMITTING THE
PARSE TREES TO PASS 2.  SYSUT2 IS GENERATED (VIA ASSIGNMENTS TO THE PSEUDO-
VARIABLE OUTPUT(4)) FOR TRANSMITTING SYMBOL TABLE INFORMATION TO PASS 2.  SYSUT3
IS GENERATED (VIA ASSIGNMENTS TO THE PSEUDOVARIABLE OUTPUT(5)) FOR TRANSMITTING
CONTROL INFORMATION TO PASS 2.  PASS 2 WILL READ THE CONTENTS OF FILES SYSUT1,
SYSUT2, AND SYSUT3 WITH CALLS TO INPUT(2), INPUT(3) AND INPUT(4) RESPECTIVELY.
IT MAY THEN REGENERATE THE FILES FOR TRANSMITTING INFORMATION TO PASS 3.

      NOTE THAT NO SYSUT FILE IS EVER OPEN BOTH FOR INPUT AND OUTPUT AT THE SAME
TIME.  WHEN THE PASCAL OVERLAY MONITOR DETECTS THAT A SYSUT FILE WHICH IS OPEN
FOR X IS TO BE USED FOR Y, WHERE X Â¬= Y AND X, Y IN (. INPUT, OUTPUT .), IT WILL
REWIND THE FILE, CLOSING IT FOR X, AND WILL THEN OPEN IT FOR Y.  BETWEEN PASSES,
ALL FILES (EXCEPT SYSIN, SYSPRINT AND SYSPUNCH) ARE CLOSED.

      UNLIKE XPLSM, WHEN THE PASCAL OVERLAY MONITOR DETECTS AN ENDFILE SITUATION
ON ANY INPUT FILE (EXCEPT SYSIN), IT WILL NOT MARK THE FILE PERMANENTLY
UNUSABLE;  IT WILL REWIND THE FILE.  IT IS THEREFORE VITALLY IMPORTANT THAT ONE
ALWAYS TEST FOR THE ENDFILE CONDITION ON ALL INPUT CALLS.

      THE TRACE ROUTINE IS NOT AVAILABLE TO PROGRAMS RUNNING UNDER THE PASCAL
OVERLAY MONITOR.  CALL TRACE AND CALL UNTRACE WOULD BE NO-OPS WITHIN THE PASCAL
COMPILER.

      FILE 2 CAN BE RETRIEVED BY THE FOLLOWING PROGRAM:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=OMONITOR.ASM,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(2,SL), X
//            DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


                           *****  FILE 3  *****
                        *****  RMONITOR.ASM  *****

      THIS FILE CONTAINS THE SOURCE CODE FOR THE PASCAL RUN MONITOR, AN ASM360
PROGRAM WHICH LOADS PASCAL PROGRAMS AND PROVIDES THE RUN-TIME ENVIRONMENT NEEDED
FOR THEIR EXECUTION.

      FILE 3 CAN BE RETRIEVED BY THE FOLLOWING PROGRAM:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=RMONITOR.ASM,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(3,SL), X
//            DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


                           *****  FILE 4  *****
                         *****  USER.PASCAL  *****

      THIS FILE CONTAINS THE UNLOADED PARTITIONED DATA SET USER.PASCAL,
WHICH CONTAINS AS ITS ONLY TWO MEMBERS THE LOAD MODULES PASCAL (THE PASCAL
OVERLAY MONITOR) AND RMONITOR (THE PASCAL RUN MONITOR).  THE OVERLAY MONITOR
TRANSFERS CONTROL TO RMONITOR WITH A 'LINK' MACRO SPECIFYING NO DCB.  THEREFORE,
RMONITOR MUST EITHER RESIDE IN THE STEPLIB DATASET, THE JOBLIB DATASET OR THE
SYSTEM LINKAGE LIBRARY (SYS1.LINKLIB).

      THE OBJECT VERSION OF OMONITOR CORRESPONDS TO THE SOURCE CODE (FILE 2)
AS MODIFIED BY THE OMONITOR UPDATE PATCHES (FILE 24).  THE OBJECT VERSION OF
RMONITOR CORRESPONDS TO THE SOURCE CODE (FILE 3) AS MODIFIED BY THE RMONITOR
UPDATE PATCHES (FILE 25).

      THE ORIGINAL OF USER.PASCAL HAS BLKSIZE=7294 (FOR 2314 DISKS).

      THE CONTENTS OF THIS FILE MAY BE PLACED INTO A DIRECT ACCESS DATA SET IN A
FORM READY FOR USE BY A JOB OF THE FOLLOWING TYPE:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEHMOVE
//SYSPRINT DD SYSOUT=A
//SYSUT1   DD UNIT=SYSDA,VOL=SER=USB001,DISP=OLD
//TARGET   DD UNIT=2314,VOL=SER=USER03,DISP=(NEW,CATLG),               X
//            SPACE=(TRK,(8,,10)),DCB=(DSORG=PO,RECFM=U,BLKSIZE=7294)
//SOURCE   DD UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(4,SL),DISP=OLD
//SYSIN    DD *
         COPY  PDS=USER.PASCAL,FROM=2400=(PASCAL,4),TO=2314=USER03
//


                           *****  FILE 5  *****
                          *****  PASS1.XPL  *****

      THIS FILE CONTAINS THE SOURCE CODE FOR PASS 1 OF THE STONY BROOK PASCAL
360 COMPILER.  PASS 1 IS RESPONSIBLE FOR LEXICAL AND SYNTACTIC ANALYSIS OF
PASCAL PROGRAMS AND PRODUCES PARSE TREES AS OUTPUT.  THE CURRENT VERSION
INCLUDES THE HENNESSY - GOLDSTEIN - CHINSAW DGNS MODULE (AS MODIFIED BY MYSELF)
WHICH PREPARES A PARAGRAPHED LISTING FOR USE IN AN EXECUTION FLOW SUMMARY,
THE KIEBURTZ BLOCK-STRUCTURED HASHING LOOKUP FOR IDENTIFIERS, AND ERROR RECOVERY
ROUTINES BY AJIT PAI.

      THIS FILE CAN BE RETRIEVED BY THE FOLLOWING PROGRAM:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PASS1.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(5,SL),    X
//            DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


                           *****  FILE 6  *****
                          *****  PASS1.OBJ  *****

      THIS FILE CONTAINS THE COMPILED CODE OF PASS1 (FILE 5) AS MODIFIED BY THE
PASS1 UPDATE 4 PATCHES (FILE 20), READY FOR LOADING BY THE PASCAL OVERLAY
MONITOR.  PASS1 CAN BE PUT UP BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PASS1.OBJ,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(6,SL),    X
//            DISP=OLD
//SYSUT2   DD DSN=USER.PASCAL.PASS1,DISP=(NEW,CATLG),UNIT=2314,        X
//            SPACE=(TRK,14),VOL=SER=USER03,                           X
//            DCB=(RECFM=F,LRECL=7200,BLKSIZE=7200)
//


                           *****  FILE 7  *****
                          *****  PASS2.XPL  *****

      THIS FILE CONTAINS THE SOURCE CODE FOR PASS 2 OF THE STONY BROOK PASCAL
360 COMPILER.  PASS 2 IS RESPONSIBLE FOR TYPE CHECKING, AND GENERATING SYMBOLIC
TRIPLES SUITABLE FOR INTERPRETATION OR FURTHER PROCESSING BY A CODE GENERATOR.
THE CURRENT VERSION INCLUDES ROUTINES BY PROFESSOR KIEBURTZ FOR SYMBOL TABLE
CONSTRUCTION AND STORAGE ALLOCATION.

      THIS FILE CAN BE RETRIEVED BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PASS2.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(7,SL),    X
//            DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


                           *****  FILE 8  *****
                          *****  PASS2.OBJ  *****

      THIS FILE CONTAINS THE COMPILED CODE OF PASS 2 (FILE 7) AS MODIFIED BY THE
PASS 2 UPDATE 4 PATCHES (FILE 21), READY FOR LOADING BY THE PASCAL OVERLAY
MONITOR.  PASS2 CAN BE PUT UP BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PASS2.OBJ,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(8,SL),    X
//            DISP=OLD
//SYSUT2   DD DSN=USER.PASCAL.PASS2,DISP=(NEW,CATLG),UNIT=2314,        X
//            SPACE=(TRK,20),VOL=SER=USER03,                           X
//            DCB=(RECFM=F,LRECL=7200,BLKSIZE=7200)
//


                           *****  FILE 9  *****
                          *****  PASS3.XPL  *****

      THIS FILE CONTAINS THE SOURCE CODE FOR PASS 3 OF THE STONY BROOK PASCAL
COMPILER.  WRITTEN BY CHARLES R. HILL, IT TAKES AS INPUT THE SYMBOLIC TRIPLES
GENERATED BY PASS 2 AND GENERATES MACHINE CODE FOR THE IBM 360/370 SERIES
COMPUTERS.

      THIS FILE CAN BE RETRIEVED BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PASS3.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(9,SL),    X
//            DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


                           *****  FILE 10  *****
                          *****  PASS3.OBJ  *****

      THIS FILE CONTAINS THE COMPILED CODE OF PASS 3 (FILE 9) AS MODIFIED BY THE
PASS 3 UPDATE 4 PATCHES (FILE 22), READY FOR LOADING BY THE PASCAL OVERLAY
MONITOR.  PASS 3 CAN BE PUT UP BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PASS3.OBJ,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(10,SL),   X
//            DISP=OLD
//SYSUT2   DD DSN=USER.PASCAL.PASS3,DISP=(NEW,CATLG),UNIT=2314,        X
//            SPACE=(TRK,16),VOL=SER=USER03,                           X
//            DCB=(RECFM=F,LRECL=7200,BLKSIZE=7200)
//

                           *****  FILE 11  *****
                           *****  PMD.XPL  *****

      THIS FILE CONTAINS THE SOURCE CODE FOR THE POST-MORTEM ANALYSIS ROUTINES
(PMD).  IF A PASCAL PROGRAM TERMINATES WITH A PASCAL RUN ERROR AND DEBUG LEVEL >
0, THE POST MORTEM DUMP ROUTINE PRINTS THE VALUES OF ALL LOCAL SCALAR, SUBRANGE,
POINTER AND STRING VARIABLES FOR THE FIVE MOST RECENT ACTIVATIONS OF ALL ACTIVE
PROCEDURES.  (THE VALUE OF A POINTER IS PRINTED OUT AS EITHER 'NIL', 'DEFINED',
OR 'UNDEFINED').  IF DEBUG LEVEL = 2 IS SPECIFIED (STRONGLY RECOMMENDED AS THE
DEFAULT), AN EXECUTION FLOW SUMMARY WHICH INDICATES THE NUMBER OF TIMES EACH
STATEMENT WAS EXECUTED IS PRINTED.

      THIS FILE CAN BE RETRIEVED BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PMD.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(11,SL),     X
//            DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


                           *****  FILE 12  *****
                           *****  PMD.OBJ  *****

      THIS FILE CONTAINS THE COMPILED CODE OF PMD (FILE 11) AS MODIFIED BY THE
PMD UPDATE PATCHES (FILE 23), READY FOR LOADING BY THE PASCAL OVERLAY MONITOR.
PMD CAN BE PUT UP BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PMD.OBJ,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(12,SL),     X
//            DISP=OLD
//SYSUT2   DD DSN=USER.PASCAL.PMD,DISP=(NEW,CATLG),UNIT=2314,          X
//            SPACE=(TRK,5),VOL=SER=USER03,                            X
//            DCB=(RECFM=F,LRECL=7200,BLKSIZE=7200)
//


      HAVING PROCESSED FILES 4, 6, 8, 10 AND 12 ABOVE, YOU ARE NOW READY TO RUN
YOUR PASCAL PROGRAMS.  THE FOLLOWING JCL PROCEDURE IS RECOMENDED:__

//PASCAL PROC SECONDS=10,LINES=1000,DBGLVL=2
//PASCAL EXEC PGM=PASCAL,REGION=148K,                                  X
//            PARM='TIME=&SECONDS,LINES=&LINES,DEBUG=&DBGLVL'
//STEPLIB  DD DSNAME=USER.PASCAL,DISP=SHR
//PASS1    DD DSNAME=USER.PASCAL.PASS1,DISP=SHR
//PASS2    DD DSNAME=USER.PASCAL.PASS2,DISP=SHR
//PASS3    DD DSNAME=USER.PASCAL.PASS3,DISP=SHR
//PMD      DD DSNAME=USER.PASCAL.PMD,DISP=SHR
//FILE3    DD UNIT=SYSDA,SPACE=(CYL,3)
//SYSUT1   DD UNIT=SYSDA,SPACE=(TRK,(10,10))
//SYSUT2   DD UNIT=SYSDA,SPACE=(TRK,(10,10))
//SYSUT3   DD UNIT=SYSDA,SPACE=(TRK,(10,10))
//SYSUT4   DD UNIT=SYSDA,SPACE=(TRK,(10,10))
//SYSUT5   DD UNIT=SYSDA,SPACE=(TRK,(10,10))
//SYSPRINT DD SYSOUT=A
//       PEND

      ONCE THE ABOVE JCL PROCEDURE IS CATALOGED, A PASCAL PROGRAM CAN BE RUN
USING THE FOLLOWING DECK SETUP:

//    (JOB CARD)
//DOIT   EXEC PASCAL
//SYSIN    DD *
           :
   PASCAL SOURCE CODE
           :
%EOF
           :
   INPUT TO THE PASCAL PROGRAM
           :
//


      NOTE THAT THE CARD IMAGE WHICH SEPARATES THE PASCAL PROGRAM FROM THE INPUT
DATA MUST CONTAIN THE CHARACTERS '%EOF' STARTING IN COLUMN ONE.  THIS IS MANDAT-
ORY, AND CAUSES THE OVERLAY MONITOR TO RETURN AN END OF FILE TO THE PASS ONE
SCANNER.

      THE PASCAL COMPILER SHOULD RUN COMFORTABLY IN A 148K PARTITION UNDER
OS/MVT OR A 152K PARTITION UNDER OS/MFT.

      TO HELP YOU GET STARTED, A SAMPLE RUN STREAM (MINUS THE JOB CARD) IS
INCLUDED.


                           *****  FILE 13  *****
                      *****  BNCHMARK.PROGRAMS  *****

      THIS FILE CAN BE RETRIEVED BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=BNCHMARK.PROGRAMS,UNIT=TAPE9,VOL=SER=PASCAL,         X
//            LABEL=(13,SL),DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


      IN ORDER TO HELP YOU MAINTAIN A LOCAL COPY OF THE STONY BROOK PASCAL
COMPILER, THE FOLLOWING PROGRAMS ARE INCLUDED ON THE TAPE:__


                           *****  FILE 14  *****
                          *****  XPLSM.ASM  *****

      THIS FILE CONTAINS AN ASSEMBLY LANGUAGE VERSION OF THE XPL SUBMONITOR,
XPLSM.  EXTERNAL REFERENCES TO THE TRACE ROUTINE HAVE BEEN ELIMINATED.  THIS
FILE IS READY FOR ASSEMBLING AND LINKEDITING INTO A LOAD MODULE LIBRARY, IN CASE
XPL IS NOT CURRENTLY AVAILABLE AT YOUR INSTALLATION.

      THE FOLLOWING JCL WILL SUFFICE:__

//    (JOB CARD)
//DOIT   EXEC ASMFCL,PARM.ASM='LOAD,NODECK'
//ASM.SYSIN DD UNIT=TAPE9,VOL=SER=PASCAL,DSN=XPLSM.ASM,LABEL=(14,SL),  X
//            DISP=OLD
//LKED.SYSLMOD DD DSN=USER.PASCAL(XPLSM),DISP=OLD
//


                           *****  FILE 15  *****
                          *****  XCOM4.OBJ  *****

      XCOM4 IS THE VERSION OF THE XPL COMPILER THAT HAS BEEN USED TO COMPILE THE
PASCAL COMPILER.  IT DOES NOT SUPPORT ANY NON-STANDARD XPL FEATURE, BUT IT DOES
CORRECT SOME WELL-KNOWN BUGS, AND WE DO NOT GUARANTEE THAT THE PASCAL COMPILER
SOURCE WILL COMPILE CORRECTLY UNDER XCOM3.  XCOM4 IS ALSO FASTER IN EXECUTION
THAN XCOM3.  THEREFORE, EVEN IF XPL IS ALREADY AVAILABLE AT YOUR INSTALLATION,
WE STRONGLY URGE YOU TO PUT UP XCOM4.  TO PUT IT UP ON A 2314 DISK, WE
SUGGEST THE FOLLOWING JCL:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=XCOM4.OBJ,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(15,SL),   X
//            DISP=OLD
//SYSUT2   DD DSN=USER.XCOM4,UNIT=2314,VOL=SER=USER03,SPACE=(TRK,18),  X
//            DISP=(NEW,CATLG)
//



      IF XPL IS NOT CURRENTLY AVAILABLE AT YOUR INSTALLATION, WE SUGGEST YOU
CATALOG THE FOLLOWING PROCEDURE:__

//XPLC   PROC
//XPL    EXEC PGM=XPLSM,REGION=180K,PARM='ALTER'
//STEPLIB  DD DSNAME=USER.PASCAL,DISP=SHR
//FILE1    DD UNIT=SYSDA,SPACE=(CYL,3),                                X
//            DSNAME=&&XPL,DISP=(NEW,PASS)
//FILE2    DD UNIT=SYSDA,SPACE=(CYL,3)
//FILE3    DD UNIT=SYSDA,SPACE=(CYL,3)
//INPUT2   DD DSN=USER.XPLIB,DISP=SHR
//PROGRAM  DD DSN=USER.XCOM4,DISP=SHR
//SYSPRINT DD SYSOUT=A
//SYSPUNCH DD SYSOUT=B
//       PEND


                           *****  FILE 16  *****
                          *****  XCOM4.XPL  *****

      THIS FILE CONTAINS THE SOURCE VERSION OF XCOM4.  TO PRODUCE XPL OBJECT
MODULES FOR DISKS WHOSE TRACK SIZE IS SOMEWHAT DIFFERENT THAN THAT OF 2314 DISKS
(1) REASSEMBLE XPLSM (FILE 14) CHANGING FILBYTS, AND (2) RECOMPILE XCOM4
CHANGING DISKBYTES TO A NEW VALUE WHICH (OPTIMALLY) IS THE LARGEST MULTIPLE OF
80 THAT IS LESS THAN OR EQUAL TO THE TRACK CAPACITY OF YOUR DISKS.  (CAUTION TO
3330 USERS: YOU MAY HAVE TO SPECIFY A LARGER REGION SIZE IN YOUR XPLC PROC IF
YOU DO THIS.)

    THIS FILE CAN BE RETRIEVED BY THE FOLLOWING JOB:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=XCOM4.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(16,SL),   X
//            DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//


                           *****  FILE 17  *****
                          *****  XPLIB.XPL  *****

      THIS FILE CONTAINS THE SOURCE VERSION OF COMPACTIFY, THE XPL PROCEDURE
WHICH IS CONCATENATED ON TO THE FRONT OF EVERY XPL PROGRAM AUTOMATICALLY.  IF
YOUR INSTALLATION DOES NOT CURRENTLY HAVE XPL, COMPACTIFY CAN BE PUT UP BY A JOB
SUCH AS:__

//    (JOB CARD)
//DOIT EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=XPLIB.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(17,SL),   X
//            DISP=OLD
//SYSUT2   DD DSN=USER.XPLIB,DISP=(NEW,CATLG),UNIT=2314,               X
//            SPACE=(TRK,(2,1)),VOL=SER=USER03,                        X
//            DCB=(RECFM=FBS,LRECL=80,BLKSIZE=7200)
//

                           *****  FILE 18  *****
                         *****  XPLXREF.XPL  *****

      THIS FILE CONTAINS THE XPL SOURCE CODE OF A CROSS-REFERENCE LISTING
PROGRAM FOR XPL SOURCE.  IT LISTS GLOBAL IDENTIFIERS, AND THE LINE NUMBERS OF
ALL REFERENCES TO THOSE IDENTIFIERS, BUT DOES NOT RECOGNIZE REDECLARATIONS OF
IDENTIFIERS.  ITS TOGGLES ARE:

      $K - PRODUCE A LINE-NUMBERED LISTING OF XPL SOURCE CODE PRECEDING THE
           CROSS-REFERENCE TABLE - INITIALLY OFF.
      $P - PRODUCE CROSS REFERENCE LISTINGS OF LOCAL VARIABLES OF PROCEDURES
           INITIALLY OFF.

      XPLXREF RUNS IN A 180K PARTITION.

      TO COMPILE XPLXREF FROM THIS TAPE ONTO A 2314 DISK USING THE JCL PROCEDURE
XPLC, USE JCL SIMILAR TO THE FOLLOWING:__

//    (JOB CARD)
//XPL    EXEC XPLC
//FILE1    DD DSN=USER.XPLXREF,UNIT=2314,VOL=SER=USER03,SPACE=(TRK,15),X
//            DISP=(NEW,CATLG)
//SYSIN    DD DSN=XPLXREF.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(18,SL), X
//            DISP=OLD
//


      TO EXECUTE XPLXREF, USE JCL SIMILAR TO THE FOLLOWING:__

//    (JOB CARD)
//XREF   EXEC XPLC
//PROGRAM  DD DSN=USER.XPLXREF,DISP=SHR
//SYSIN    DD *
           :
    (XPL SOURCE TO BE CROSS-REFERENCED)
           :
//


                           *****  FILE 19  *****
                         *****  EDITXPL.XPL  *****

      THIS FILE CONTAINS THE XPL SOURCE CODE OF A CARD-IMAGE EDITOR.  IT ACCEPTS
THE FILE OF CARD IMAGES TO BE EDITED ON FILE INPUT(2), AND THE EDIT COMMANDS AND
CARDIMAGES TO BE INSERTED ON THE FILE SYSIN.  OUTPUT IS TO FILE SYSPUNCH.  IF A
LINE-NUMBERED LISTING OF THE OUTPUT FILE IS DESIRED, IT WILL BE PRODUCED ON
FILE OUTPUT(3).  THIS PROGRAM WILL BE USED TO EDIT UPDATE PATCHES INTO THE
PASCAL COMPILER SOURCE FILES.

      IN THE SYSIN FILE, AN EDIT COMMAND IS RECOGNIZED BY A CONTROL CHARACTER IN
THE FIRST COLUMN.  THE CONTROL CHARACTER IS INITIALLY ASTERISK ('*'), BUT THAT
CAN BE DYNAMICALLY CHANGED (SEE BELOW).  AN EDIT COMMAND MAY CONTAIN, IN FREE
FORMAT ON THE REST OF THE CARD:

      A SEQUENCE OF NUMBERS OR SUBRANGES OF NUMBERS, AS 2 5 9..12 THAT ARE
           INTERPRETED AS LINE NUMBERS IN THE SOURCE FILE AND WHICH PROVIDE
           POINTS FOR INVOCATION OF EDIT COMMANDS;

      $I - THE INSERT COMMAND.  AT THE POINT IN THE SOURCE FILE FOLLOWING THE
           LAST PRECEDING LINE NUMBER GIVEN ON AN EDIT COMMAND CARD, THE
           SEQUENCE OF CARDS FOLLOWING THE COMMAND CARD WILL BE INSERTED INTO
           THE SOURCE FILE.  THIS WILL TERMINATE WHEN THE NEXT EDIT COMMAND
           CARD IS ENCOUNTERED (OR UPON END-OF-FILE);

      $L - LISTING TOGGLE, INITIALLY OFF.  WHEN ON, THE SOURCE FILE, AS MODIFIED
           BY EDITING, IS LISTED ON THE OUTPUT3 FILE.

      $P - OUTPUT TOGGLE INITIALLY ON.  WHEN ON, THE MODIFIED SOURCE FILE IS
           OUTPUT TO THE SYSPUNCH FILE.

      $D - DELETION TOGGLE, INITIALLY OFF.  WHEN ON, EACH RECORD OF THE SOURCE
           FILE THAT IS MENTIONED BY NUMBER OR INCLUDED IN A SUBRANGE ON A
           COMMAND CARD IS DELETED FROM THE MODIFIED SOURCE FILE.  TO REPLACE,
           YOU WOULD USE DELETE AND INSERT.

      $<OLD CONTROL CHAR><NEW CONTROL CHAR> - DYNAMICALLY CHANGES THE CONTROL
           CHARACTER.  NOTE THAT <OLD CONTROL CHAR> MUST APPEAR IN COLUMN 1.
           FOR EXAMPLE

*   $*@

           CHANGES THE CONTROL CHARACTER FROM '*' TO '@' (FOR EDITING ASM360
           SOURCE CODE, FOR INSTANCE).

      TO COMPILE EDITXPL FROM THIS TAPE ONTO A 2314 DISK USE THE FOLLOWING
JCL:__

//    (JOB CARD)
//XPL    EXEC XPLC
//FILE1    DD DSN=USER.EDITXPL,UNIT=2314,VOL=SER=USER03,SPACE=(TRK,2), X
//            DISP=(NEW,CATLG)
//SYSIN    DD DSN=EDITXPL.XPL,UNIT=TAPE9,VOL=SER=PASCAL,LABEL=(19,SL), X
//            DISP=OLD
//

      TO EXECUTE EDITXPL AND PRODUCE AN UPDATED SOURCE FILE, USE JCL SIMILAR TO:

//    (JOB CARD)
//EDIT   EXEC XPLC,REGION=120K
//INPUT2   DD DSN=INFILE,DISP=SHR
//PROGRAM  DD DSN=USER.EDITXPL,DISP=SHR
//SYSPUNCH DD DSN=&&CARDS,UNIT=SYSDA,SPACE=(CYL,(3,1)),DISP=(MOD,PASS)
//OUTPUT3  DD SYSOUT=A,DCB=(RECFM=FB,LRECL=132,BLKSIZE=1320)
//SYSIN    DD *
           :
    (EDITOR CONTROL FILE)
           :
//



                           *****  FILE 20  *****
                        *****  PASS1.UPDATE4  *****

                           *****  FILE 21  *****
                        *****  PASS2.UPDATE4  *****

                           *****  FILE 22  *****
                        *****  PASS3.UPDATE4  *****

                           *****  FILE 23  *****
                         *****  PMD.UPDATE4  *****
                           *****  FILE 24  *****
                       *****  OMONITOR.UPDATE4  *****

                           *****  FILE 25  *****
                       *****  RMONITOR.UPDATE4  *****

      THESE SIX FILES CONTAIN THE UPDATE 4 PATCHES FOR THE PASS1, PASS2, PASS3,
PMD, OMONITOR AND RMONITOR MODULES (FILES 5, 7, 9, 11, 2 AND 3).  THE UPDATES
ARE IN EDITXPL FORMAT.  YOU ARE URGED TO PUNCH OUT A COPY OF THESE UPDATE FILES
ON CARDS, AS FUTURE UPDATE PATCHES MAY HAVE TO BE MERGED WITH THE UPDATE 4
PATCHES.

      FOR EXAMPLE, PASS1 UPDATE 3 PATCHES CAN BE PUNCHED OUT BY JCL SUCH AS:__

//    (JOB CARD)
//DOIT   EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=A
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=PASS1.UPDATE4,UNIT=TAPE9,VOL=SER=PASCAL,             X
//            LABEL=(20,SL),DISP=OLD
//SYSUT2   DD SYSOUT=B,DCB=BLKSIZE=80
//




              THE EBCDIC REPRESENTATION OF STANDARD PASCAL SYMBOLS
              *** ****** ************** ** ******** ****** *******

      UP ARROW:              @
      LEFT SQUARE BRACKET:   (.
      RIGHT SQUARE BRACKET:  .)
      LEFT CURLY BRACKET:    (*
      RIGHT CURLY BRACKET:   *)
      IN ADDITION, Â¬= CAN BE USED FOR <>;  & FOR AND; | FOR OR; AND Â¬ FOR NOT.


        MAJOR DIFFERENCES BETWEEN STONY BROOK PASCAL AND STANDARD PASCAL
        ***** *********** ******* ***** ***** ****** *** ******** ******

      IDENTIFIERS CAN CONTAIN INTERNALLY THE UNDERSCORE CHARACTER('_').

      THE WORD "FORWARD" IS RESERVED.

      NONSTANDARD FILES (I.E., ALL FILES OTHER THAN INPUT AND OUTPUT) ARE NOT
YET IMPLEMENTED.

      A NEW PREDECLARED FUNCTION, 'CLOCK':
           FUNCTION CLOCK:INTEGER;
WHICH HAS NO PARAMETERS, AND RETURNS ELAPSED CPU TIME IN UNITS OF 0.01 SECONDS.

      OF ALL THE PREDECLARED PROCEDURES AND FUNCTIONS, ONLY THE ARITHMETIC FUNC-
TIONS SIN, COS, EXP, LN, SQRT AND ARCTAN MAY BE PASSED AS FORMAL PARAMETERS.  A
NONSTANDARD SYNTAX IS USED WHICH REQUIRES PROGRAMMERS TO FULLY SPECIFY THE TYPES
OF FORMAL PROCEDURE AND FUNCTION PARAMETERS.

      THE ARGUMENTS TO THE STANDARD PROCEDURE "WRITE" MUST FOLLOW THE ORDINARY
SYNTAX FOR PARAMETER LISTS, OR A SYNTAX ERROR WILL RESULT.  PREDECLARED
VARIABLES INTFIELDSIZE, REALFIELDSIZE AND BOOLFIELDSIZE SPECIFY THE "MINIMUN
FIELD WIDTH" WHEN AN INTEGER, REAL OR BOOLEAN VALUE RESPECTIVELY IS WRITTEN.
THESE VARIABLES ARE INITIALIZED TO:

      INTFIELDSIZE : 12
      REALFIELDSIZE: 14
      BOOLFIELDSIZE:  6

      AS IN PASCAL 6000-3.4, THE END OF EACH LINE OF OUTPUT MUST BE EXPLICITLY
INDICATED BY A CALL TO WRITELN.  CARE MUST BE TAKEN TO INSURE THAT A LINE DOES
NOT GROW LONGER THAN 132 CHARACTERS,  OR ELSE THE TAIL END OF THE LINE WILL NOT
BE PRINTED.


                            COMPILER CONTROL TOGGLES
                            ******** ******* *******

      A $ WITHIN A COMMENT SPECIFIES THAT THE NEXT CHARACTER IS A CONTROL
CHARACTER.  CORRESPONDING TO EVERY EBCDIC CHARACTER IS A CONTROL TOGGLE.  WHEN
$ <CHARACTER> IS ENCOUNTERED IN A COMMENT, THE VALUE OF THE CORRESPONDING TOGGLE
IS COMPLEMENTED.  NOT ALL CONTROL TOGGLES ARE USED.  IN THE CURRENT VERSION, THE
USEFUL TOGGLES ARE:

      $B - TRACE THE EXECUTION OF THE LL1 PARSER (CAUTION - THIS PRODUCES VOLUM-
           INOUS OUTPUT.)
      $D - PRINT COMPILATION STATISTICS.
      $E - PRINT CODE (ASSEMBLY FORMAT) EMITTED IN PASS 3.
      $L - PRODUCE A FORMATTED LISTING OF THE PASCAL PROGRAM (INITIALLY ON).
      $M - PRODUCE AN UNFORMATTED LISTING OF THE SOURCE PROGRAM.
      $P - DUMP THE PARSE TREES PRODUCED BY PASS 1.
      $S - DUMP THE SYMBOL TABLE AND THE POST-MORTEM TABLES.
      $T - PRINT THE TRIPLES EMITTED DURING PASS 2.
      $Z - TRACE THE OPENING OF IDENTIFIER SCOPES DURING PASS 1, AND DUMP THE
           SYMBOL TABLE AT THE END OF PASS 1.
      $| - SET MARGIN.  THE PORTION OF SUCCEEDING CARDS STARTING FROM THE COLUMN
           CONTAINING THE | WILL BE IGNORED.



